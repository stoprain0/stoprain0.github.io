{"meta":{"title":"止雨","subtitle":"","description":"我忘却了所有悲剧，所见皆是奇迹。","author":"止雨","url":"https://stoprain0.github.io.git","root":"/"},"pages":[{"title":"关于","date":"2021-09-20T02:27:44.000Z","updated":"2021-09-20T12:56:59.696Z","comments":true,"path":"about/index.html","permalink":"https://stoprain0.github.io.git/about/index.html","excerpt":"","text":"⏮⏪⏸⏭⏩ 💖以此博客记录我的学习笔记。"}],"posts":[{"title":"HTML","slug":"HTML","date":"2021-10-06T08:32:58.605Z","updated":"2021-10-08T12:27:08.900Z","comments":true,"path":"2021/10/06/HTML/","link":"","permalink":"https://stoprain0.github.io.git/2021/10/06/HTML/","excerpt":"","text":"时间：2021/10/7 学习 HTML # HTML Hyper Text Markup Language 超文本标记语言 # 一、HTML 基础 # 1. HTML 基本结构 - 网页结构主体如下： &lt;!DOCTYPE html> &lt;html lang=\"en\">&lt;head> &lt;meta charset=\"UTF-8\"> &lt;title>Title&lt;/title>&lt;/head>&lt;body>&lt;/body>&lt;/html> HTML 注释 快捷键 CTRL + / &lt;!-- --> 里面放注释的内容&lt;!DOCTYPE html> &lt;!--DOCTYPE: 告诉浏览器，我们使用的是什么规范 -->&lt;html lang=\"en\"> &lt;!-- head 标签代表网页头部 -->&lt;head> &lt;!-- meta 描述性标签，它用来描述我们网站的一些信息 --> &lt;meta charset=\"UTF-8\"> &lt;!-- title 标签代表网页标题 --> &lt;title>Title&lt;/title>&lt;/head> &lt;!-- body 标签代表网页主体 -->&lt;body>&lt;/body>&lt;/html> 描述关键词 &lt;meta name=&quot;keywords&quot; content=&quot;HTML&quot;&gt; 描述介绍 &lt;meta name=\"description\" content=\"来这里可以学习HTML\">&lt;body> Hello World!&lt;/body> # 2. 网页基本标签 标题标签 段落标签 换行标签 水平线标签 字体样式标签 注释和特殊符号 标题标签 &lt;!-- 标题标签 -->&lt;h1>一级标题&lt;/h1>&lt;h2>二级标题&lt;/h2>&lt;h3>三级标题&lt;/h3>&lt;h4>四级标题&lt;/h4>&lt;h5>五级标题&lt;/h5>&lt;h6>六级标题&lt;/h6> 段落标签 &lt;!-- 段落标签 --> &lt;p>断章&lt;/p>&lt;p>[ 现代 ] 卞之琳&lt;/p>&lt;p>你站在桥上看风景，&lt;/p>&lt;p>看风景的人在楼上看你。&lt;/p>&lt;p>明月装饰了你的窗子，&lt;/p>&lt;p>你装饰了别人的梦。&lt;/p> 换行标签 &lt;!--换行标签--&gt; 断章&lt;br/&gt; [ 现代 ] 卞之琳&lt;br/&gt; 你站在桥上看风景，&lt;br/&gt; 看风景的人在楼上看你。&lt;br/&gt; 明月装饰了你的窗子，&lt;br/&gt; 你装饰了别人的梦。&lt;br/&gt; 水平线标签 &lt;!-- 水平线标签 -->&lt;hr/> 字体样式标签 &lt;!--字体样式标签--&gt; 粗体：&lt;strong&gt;i love you&lt;/strong&gt; 斜体：&lt;em&gt;i love you&lt;/em&gt; 注释和特殊符号 &lt;!--这是注释--&gt; &lt;!--特殊符号--&gt; 空 格 空&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;格 &lt;br/&gt; 大于号&amp;gt; &lt;br/&gt; 小于号&amp;lt; &lt;br/&gt; 版权符号&amp;copy; &lt;br/&gt; # 3. 图像标签 &lt;img src=\"../resources/image/1.jpg\" alt=\"头像\"> alt 标签：图片无法正常显示时，显示文字描述 &lt;img src=\"../resources/image/2.jpg\" alt=\"头像\"> &lt;img src=&quot;../resources/image/1.jpg&quot; alt=&quot;头像&quot; title=&quot;鼠标悬停时显示的文字&quot;&gt; &lt;img src=&quot;../resources/image/1.jpg&quot; alt=&quot;头像&quot; title=&quot;鼠标悬停时显示的文字&quot; width=&quot;300&quot; height=&quot;300&quot;&gt; 还可以设置图片宽和高等等… # 4. 链接标签 文本超链接 &lt;!-- a 标签 href： 必填，表示要跳转到那个页面 -->&lt;a href=\"图像标签.html\">我的头像&lt;/a>&lt;a href=\"https://www.baidu.com/\">百度&lt;/a> 图像超链接 将图片标签嵌入链接标签中 &lt;a href=\"https://www.baidu.com/\">&lt;img src=\"../resources/image/1.jpg\" alt=\"头像\" title=\"鼠标悬停时显示的文字\" width=\"300\" height=\"300\">&lt;/a> &lt;a href=\"#\" target=\"_blank\">在新页面打开&lt;/a>&lt;a href=\"#\" target=\"_self\">在当前页面打开&lt;/a> 锚链接 &lt;!-- 使用 name 作为标记 -->&lt;a name=\"top\">顶部&lt;/a>---------------------------------------&lt;!-- #加标记名 -->&lt;a href=\"#top\">回到顶部&lt;/a> 多应用于页面的跳转，如目录 功能性链接 &lt;!--功能性链接 邮件链接 mailto:+邮箱地址 --&gt; &lt;a href=&quot;mailto:2304465670@qq.com&quot;&gt;点击联系我&lt;/a&gt; 可以打开邮箱 # 5. 行内标签和块元素 块元素 无论内容多少，该元素独占一行 如：p、h1-h6… 行内元素 内容撑开宽度，左右都是行内元素的可以排在同一行 如：a、strong、em… &lt;h1>块元素独占一行&lt;/h1> 其他文字无法和块元素在同一行&lt;br>&lt;strong>行内元素可以同一行&lt;/strong> &lt;strong>行内元素可以同一行&lt;/strong> # 6. 列表标签 有序列表 &lt;!-- 无序列表 -->&lt;ol> &lt;li>Java&lt;/li> &lt;li>Pathon&lt;/li> &lt;li>运维&lt;/li> &lt;li>前端&lt;/li> &lt;li>C/C++&lt;/li>&lt;/ol> 无序列表 应用范围：导航，侧边栏… &lt;!-- 无序列表 -->&lt;ul> &lt;li>Java&lt;/li> &lt;li>Pathon&lt;/li> &lt;li>运维&lt;/li> &lt;li>前端&lt;/li> &lt;li>C/C++&lt;/li>&lt;/ul> 定义列表 &lt;!--定义列表 dl:标签 dt:列表名称 dd:列表内容 --&gt; &lt;dl&gt; &lt;dt&gt;学科&lt;/dt&gt; &lt;dd&gt;Java&lt;/dd&gt; &lt;dd&gt;Python&lt;/dd&gt; &lt;dd&gt;运维&lt;/dd&gt; &lt;dd&gt;前端&lt;/dd&gt; &lt;dd&gt;C/C++&lt;/dd&gt; &lt;/dl&gt; &lt;dl&gt; &lt;dt&gt;位置&lt;/dt&gt; &lt;dd&gt;西安&lt;/dd&gt; &lt;dd&gt;新疆&lt;/dd&gt; &lt;/dl&gt; l 多应用于公司网站底部 # 7. 表格标签 &lt;!-- 表格标签行: tr单元格: td-->&lt;table border=\"1px\"> &lt;tr> &lt;td>1-1&lt;/td> &lt;td>1-2&lt;/td> &lt;td>1-3&lt;/td> &lt;td>1-4&lt;/td> &lt;td>1-5&lt;/td> &lt;/tr> &lt;tr> &lt;td>2-1&lt;/td> &lt;td>2-2&lt;/td> &lt;td>2-3&lt;/td> &lt;td>2-4&lt;/td> &lt;/tr> &lt;tr> &lt;td>3-1&lt;/td> &lt;td>3-2&lt;/td> &lt;td>3-3&lt;/td> &lt;td>3-4&lt;/td> &lt;/tr> &lt;table border=\"1px\"> &lt;tr>&lt;!-- colspan 合并列 --> &lt;td colspan=\"4\">1-1&lt;/td> &lt;/tr> &lt;tr>&lt;!-- rowspan 合并行 --> &lt;td rowspan=\"2\">2-1&lt;/td> &lt;td>2-2&lt;/td> &lt;td>2-3&lt;/td> &lt;td>2-4&lt;/td> &lt;/tr> &lt;tr> &lt;td>3-2&lt;/td> &lt;td>3-3&lt;/td> &lt;td>3-4&lt;/td> &lt;/tr> # 8. 媒体元素 视频元素 video &lt;!--src: 资源路劲controls: 控制条autoplay: 自动播放-->&lt;video src=\"https://www.bilibili.com/video/BV14f4y1h7FX?share_source=copy_web\" controls autoplay>&lt;/video> 音频元素 audio &lt;audio src=\"../resources/audio/周杰伦-明明就.flac\" controls autoplay>&lt;/audio> # 二、页面结构分析 &lt;!DOCTYPE html>&lt;html lang=\"en\">&lt;head> &lt;meta charset=\"UTF-8\"> &lt;title>网页结构学习&lt;/title>&lt;/head>&lt;body>&lt;head> &lt;h2>网页头部&lt;/h2>&lt;/head>&lt;section> &lt;h2>网页主体&lt;/h2>&lt;/section>&lt;footer> &lt;h2>网页脚部&lt;/h2>&lt;/footer>&lt;/body>&lt;/html> 网页的大体结构： # 三、iframe 内联框架 &lt;!--src: 引用地址 name: 框架标识名 -->&lt;iframe src=\"path\" name=\"mainFrame\">&lt;/iframe>&lt;iframe src=\"//player.bilibili.com/player.html?aid=290807456&amp;bvid=BV14f4y1h7FX&amp;cid=345163820&amp;page=1\" autoplay scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" > &lt;/iframe> &lt;iframe src=\"https://www.bilibili.com/\" frameborder=\"0\"width=\"800px\" height=\"600px\"> &lt;/iframe> 可以与 a 标签联合使用 # 四、表单语法 # 1. 文本框和单选框 &lt;h1>注册&lt;/h1>&lt;!-- 表单 formaction: 表单提交的位置，可以是网站，也可以是一个请求处理地址method: post,get 提交方式-->&lt;form action=\"我的第一个网页.html\" method=\"get\"> &lt;p>名字：&lt;input type=\"text\" name=\"username\">&lt;/p> &lt;p>密码：&lt;input type=\"password\" name=\"password\">&lt;/p> &lt;p> &lt;input type=\"submit\"> &lt;input type=\"reset\">&lt;/form> get 提交方式：我们可以在 url 中看到提交的信息，不安全，但高效 post 提交方式： 比较安全，可以传输大文件 post 提交方式 表单元素格式 &lt;!-- 文本输入框：input type=\"text\" value=\"默认值\" 默认初始值 maxlength=\"8\" 最长能写几个字符 size=“30” 文本框的长度 --> &lt;p>名字：&lt;input type=\"text\" name=\"username\">&lt;/p>&lt;!-- 密码框： input type=\"password\" --> &lt;p>密码：&lt;input type=\"password\" name=\"password\">&lt;/p>&lt;!-- 单选框标签input type=\"radio\"value: 单选框的值name: 表示分组，相同名字为同一组，就只能选一个--> &lt;p>性别： &lt;input type=\"radio\" value=\"boy\" name=\"sex\">男 &lt;input type=\"radio\" value=\"girl\" name=\"sex\">女 &lt;/p> # 2. 按钮和多选框 多选框 &lt;!-- 多选框 input type=&quot;checkbox&quot; --&gt; &lt;p&gt;爱好： &lt;input type=&quot;checkbox&quot; value=&quot;sleep&quot; name=&quot;hobby&quot;&gt;睡觉 &lt;input type=&quot;checkbox&quot; value=&quot;code&quot; name=&quot;hobby&quot;&gt;敲代码 &lt;input type=&quot;checkbox&quot; value=&quot;chat&quot; name=&quot;hobby&quot;&gt;聊天 &lt;input type=&quot;checkbox&quot; value=&quot;game&quot; name=&quot;hobby&quot;&gt;游戏 &lt;/p&gt; 按钮 &lt;!-- 按钮input type=\"button\" 普通按钮input type=\"image\" 图像按钮input type=\"submit\" 提交按钮input type=\"reset\" 重置--> &lt;p>按钮： &lt;input type=\"button\" name=\"btn1\" value=\"点击变长\"> &lt;input type=\"image\" src=\"../resources/image/1.jpg\" width=\"300px\" height=\"300px\"> &lt;/p> 单选框和多选框：在属性后面加 checked 可以设为默认选中 # 3. 列表框、文本域和文件域 下拉列表 &lt;!-- 下拉框，列表框 --> &lt;p>下拉框： &lt;select name=\"列表名称\" id=\"\"> &lt;option value=\"china\">中国&lt;/option> &lt;option value=\"us\">美国&lt;/option> &lt;option value=\"eth\" selected>瑞士&lt;/option> &lt;option value=\"yingdu\">印度&lt;/option> &lt;/select> &lt;/p> selected 可设为默认值 文本域 &lt;!--文本域 cols=&quot;50&quot; rows=&quot;10&quot;--&gt; &lt;p&gt;反馈： &lt;textarea name=&quot;textarea&quot; cols=&quot;50&quot; rows=&quot;10&quot;&gt;文本内容&lt;/textarea&gt; &lt;/p&gt; 文件域 &lt;!-- 文本域 input type=\"file\"--> &lt;p> &lt;input type=\"file\" name=\"files\"> &lt;input type=\"button\" value=\"上传\" name=\"upload\"> &lt;/p> # 4. 搜索框滑块和简单验证 简单验证 &lt;!-- 邮箱验证 --> &lt;p>邮箱： &lt;input type=\"email\" name=\"email\"> &lt;/p> &lt;!-- URL 验证 --> &lt;p>链接： &lt;input type=\"url\" name=\"url\"> &lt;/p> &lt;!-- 数字验证 step: 增长步数 --> &lt;p>数字： &lt;input type=\"number\" name=\"num\" max=\"100\" min=\"0\" step=\"10\"> &lt;/p> 搜索框滑块 &lt;!-- 滑块 --> &lt;p>音量： &lt;input type=\"range\" name=\"voice\" min=\"0\" max=\"100\" step=\"2\"> &lt;/p>&lt;!-- 搜索框 --> &lt;p> &lt;input type=\"search\" name=\"search\"> &lt;/p> # 五、表单的应用 隐藏域 只读 禁用 隐藏域 hidden &lt;p>密码：&lt;input type=\"password\" name=\"password\" hidden>&lt;/p> 只读 readonly 加了此属性则不可更改对应的标签内容 禁用 disabled 加了此属性则不可使用被禁用的标签 点击文字跳转到相应文本框输入 增强鼠标可用性 &lt;label for=\"mark\">点击跳&lt;/label> &lt;input type=\"text\" id=\"mark\"> # 表单初级验证 placeholder 提示信息 &lt;input type=\"text\" name=\"username\" placeholder=\"请输入名字\"> required 不能为空 &lt;input type=\"password\" name=\"password\" required> pattern 正则表达式 常用的正则表达式_正则表达式大全_脚本之家 (jb51.net) &lt;input type=\"text\" name=\"diyemil\" pattern=\"\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\">","categories":[{"name":"前端","slug":"前端","permalink":"https://stoprain0.github.io.git/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"https://stoprain0.github.io.git/tags/HTML/"},{"name":"前端","slug":"前端","permalink":"https://stoprain0.github.io.git/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"Java类型转换","slug":"java1","date":"2021-09-22T15:55:32.426Z","updated":"2021-09-22T15:56:56.697Z","comments":true,"path":"2021/09/22/java1/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/22/java1/","excerpt":"","text":"# Java 类型转换 强制类型转换：由高转低 如 int -&gt;byte 自动类型转换 (隐式类型转换)： 1. 不能对布尔值转换 2. 不能把对象类型转换为不相干的类型 3. 在把高容量转换到低容量时，需要强制类型转换 4. 转换的时候可能存在内存溢出，或是精度问题 Java 会把不同的类型先转换为同一类型再去计算，原理类似 C 语言中 int 与 float 类型做运算。 文章源自学习 B 站【狂神说 Java】Java 零基础学习视频通俗易懂","categories":[{"name":"Java系列","slug":"Java系列","permalink":"https://stoprain0.github.io.git/categories/Java%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://stoprain0.github.io.git/tags/Java/"}]},{"title":"git","slug":"git","date":"2021-09-21T15:44:55.758Z","updated":"2021-09-21T15:47:08.178Z","comments":true,"path":"2021/09/21/git/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/21/git/","excerpt":"","text":"# Git 常用命令 仓库 # 在当前目录新建一个 Git 代码库$ git init# 新建一个目录，将其初始化为 Git 代码库$ git init [project-name]# 下载一个项目和它的整个代码历史$ git clone [url]例如： 配置 # 显示当前的 Git 配置$ git config --list# 编辑 Git 配置文件$ git config -e [--global]# 设置提交代码时的用户信息$ git config [--global] user.name \"[name]\"$ git config [--global] user.email \"[email address]\" 增加 / 删除文件 # 添加指定文件到暂存区$ git add [file1] [file2] ...# 添加指定目录到暂存区，包括子目录$ git add [dir]# 添加当前目录的所有文件到暂存区$ git add .# 添加每个变化前，都会要求确认# 对于同一个文件的多处变化，可以实现分次提交$ git add -p# 删除工作区文件，并且将这次删除放入暂存区$ git rm [file1] [file2] ...# 停止追踪指定文件，但该文件会保留在工作区$ git rm --cached [file]# 改名文件，并且将这个改名放入暂存区$ git mv [file-original] [file-renamed] 代码提交 # 提交暂存区到仓库区$ git commit -m [message]# 提交暂存区的指定文件到仓库区$ git commit [file1] [file2] ... -m [message]# 提交工作区自上次 commit 之后的变化，直接到仓库区$ git commit -a# 提交时显示所有 diff 信息$ git commit -v# 使用一次新的 commit，替代上一次提交# 如果代码没有任何新变化，则用来改写上一次 commit 的提交信息$ git commit --amend -m [message]# 重做上一次 commit，并包括指定文件的新变化$ git commit --amend [file1] [file2] ... 分支 # 列出所有本地分支$ git branch# 列出所有远程分支$ git branch -r# 列出所有本地分支和远程分支$ git branch -a# 新建一个分支，但依然停留在当前分支$ git branch [branch-name]# 新建一个分支，并切换到该分支$ git checkout -b [branch]# 新建一个分支，指向指定 commit$ git branch [branch] [commit]# 新建一个分支，与指定的远程分支建立追踪关系$ git branch --track [branch] [remote-branch]# 切换到指定分支，并更新工作区$ git checkout [branch-name]# 切换到上一个分支$ git checkout -# 建立追踪关系，在现有分支与指定的远程分支之间$ git branch --set-upstream [branch] [remote-branch]# 合并指定分支到当前分支$ git merge [branch]# 选择一个 commit，合并进当前分支$ git cherry-pick [commit]# 删除分支$ git branch -d [branch-name]# 删除远程分支$ git push origin --delete [branch-name]$ git branch -dr [remote/branch] 标签 # 列出所有 tag$ git tag# 新建一个 tag 在当前 commit$ git tag [tag]# 新建一个 tag 在指定 commit$ git tag [tag] [commit]# 删除本地 tag$ git tag -d [tag]# 删除远程 tag$ git push origin :refs/tags/[tagName]# 查看 tag 信息$ git show [tag]# 提交指定 tag$ git push [remote] [tag]# 提交所有 tag$ git push [remote] --tags# 新建一个分支，指向某个 tag$ git checkout -b [branch] [tag] 查看信息 # 显示有变更的文件$ git status# 显示当前分支的版本历史$ git log# 显示 commit 历史，以及每次 commit 发生变更的文件$ git log --stat# 搜索提交历史，根据关键词$ git log -S [keyword]# 显示某个 commit 之后的所有变动，每个 commit 占据一行$ git log [tag] HEAD --pretty=format:%s# 显示某个 commit 之后的所有变动，其 \"提交说明\" 必须符合搜索条件$ git log [tag] HEAD --grep feature# 显示某个文件的版本历史，包括文件改名$ git log --follow [file]$ git whatchanged [file]# 显示指定文件相关的每一次 diff$ git log -p [file]# 显示过去 5 次提交$ git log -5 --pretty --oneline# 显示所有提交过的用户，按提交次数排序$ git shortlog -sn# 显示指定文件是什么人在什么时间修改过$ git blame [file]# 显示暂存区和工作区的差异$ git diff# 显示暂存区和上一个 commit 的差异$ git diff --cached [file]# 显示工作区与当前分支最新 commit 之间的差异$ git diff HEAD# 显示两次提交之间的差异$ git diff [first-branch]...[second-branch]# 显示今天你写了多少行代码$ git diff --shortstat \"@&#123;0 day ago&#125;\"# 显示某次提交的元数据和内容变化$ git show [commit]# 显示某次提交发生变化的文件$ git show --name-only [commit]# 显示某次提交时，某个文件的内容$ git show [commit]:[filename]# 显示当前分支的最近几次提交$ git reflog 远程同步 # 下载远程仓库的所有变动$ git fetch [remote]# 显示所有远程仓库$ git remote -v# 显示某个远程仓库的信息$ git remote show [remote]# 增加一个新的远程仓库，并命名$ git remote add [shortname] [url]# 取回远程仓库的变化，并与本地分支合并$ git pull [remote] [branch]# 上传本地指定分支到远程仓库$ git push [remote] [branch]# 强行推送当前分支到远程仓库，即使有冲突$ git push [remote] --force# 推送所有分支到远程仓库$ git push [remote] --all 撤销 # 恢复暂存区的指定文件到工作区$ git checkout [file]# 恢复某个 commit 的指定文件到暂存区和工作区$ git checkout [commit] [file]# 恢复暂存区的所有文件到工作区$ git checkout .# 重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变$ git reset [file]# 重置暂存区与工作区，与上一次 commit 保持一致$ git reset --hard# 重置当前分支的指针为指定 commit，同时重置暂存区，但工作区不变$ git reset [commit]# 重置当前分支的 HEAD 为指定 commit，同时重置暂存区和工作区，与指定 commit 一致$ git reset --hard [commit]# 重置当前 HEAD 为指定 commit，但保持暂存区和工作区不变$ git reset --keep [commit]# 新建一个 commit，用来撤销指定 commit# 后者的所有变化都将被前者抵消，并且应用到当前分支$ git revert [commit]暂时将未提交的变化移除，稍后再移入$ git stash$ git stash pop 其他 # 生成一个可供发布的压缩包$ git archive引用 gitee 官方文档自","categories":[{"name":"git","slug":"git","permalink":"https://stoprain0.github.io.git/categories/git/"}],"tags":[{"name":"git学习","slug":"git学习","permalink":"https://stoprain0.github.io.git/tags/git%E5%AD%A6%E4%B9%A0/"},{"name":"git命令语句","slug":"git命令语句","permalink":"https://stoprain0.github.io.git/tags/git%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/"}]},{"title":"","slug":"about","date":"2021-09-20T02:22:59.586Z","updated":"2021-09-20T02:22:18.445Z","comments":true,"path":"2021/09/20/about/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/20/about/","excerpt":"","text":"关于","categories":[],"tags":[]},{"title":"数据库原理及应用","slug":"SQL1","date":"2021-09-19T13:34:41.392Z","updated":"2021-09-22T10:51:59.999Z","comments":true,"path":"2021/09/19/SQL1/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/19/SQL1/","excerpt":"","text":"# 数据库基本操作 发现 SQL 语句对关键字不区分大小写，去了解一下发现 sql 语句大小写的问题： 关键字不区分大小写 例如 select ，from， 大小写均可 标识符区分大小写 例如 表名，列名 标识符如果不加双引号，默认是按大写执行 标识符如果加双引号，则是按原始大小写执行 SQL 语句的书写规范 所有表名，列名全部小写 关键字，内置函数名全部大写 ** 注释使用：**SQL 语句中的单行注释使用 – -- 使用在语句后 SQL 语句中的多行注释采用 /*…*****/ 使用 / 切换数据库： USE+数据库名称 创建表的基本语法： CREATE TABLE 表名( 列名1 数据类型, 列名2 数据类型) 指定字段名为主键 PRIMARY KEY： 指定数据自动增长 IDENTITY (1，1) 第一个参数代表初始值，第二个参数代表增长数。 NOT NULL 则指定对应的值不能为空。 CHECK(列名 =' 值’OR 列名 =‘值’) 限定输入条件 DEFAULT (‘值’) 设默认值 字段名 数据类型 PRIMARY KEY IDENTITY(1，1)建表时如果表名已经存在，则会发生冲突，这时我们可以在建表前加一个判断，然后去解决冲突。 IF EXISTS(SELECT*FROM sys.objects WHERE name='表名'AND TYPE='U' )DROP TABLE 表名–DROP TABLE 表名 删除表（删表仅推荐在数据库入门时使用，因删表操作可能会导致数据丢失） -TYPE=‘U’ 代表为用户自定义的表 # 数据类型： 类型 数据类型举例 说明 Character CHAR(n) , VARCHAR(n) CHAR 固定长度，VARCHAR 可变长度","categories":[{"name":"数据库系列","slug":"数据库系列","permalink":"https://stoprain0.github.io.git/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://stoprain0.github.io.git/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"SQL","slug":"SQL","permalink":"https://stoprain0.github.io.git/tags/SQL/"}]},{"title":"更换主题","slug":"更换主题","date":"2021-09-18T17:09:02.142Z","updated":"2021-09-19T04:39:59.239Z","comments":true,"path":"2021/09/19/更换主题/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/19/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/","excerpt":"","text":"时间：2021/9/19 更换主题 继创建了自己的博客后，应用了比较出名的二次元主题 Yume Shoka 主题地址： https://hexo.bootcss.com/themes/ 主题应用说明： https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/ 我的博客 经过修改对应的配置文件达到个性化的效果图 暂时修改了头像图片，了解博文的修改和发布。以此博文记录我完善博客的过程，那么就到这里吧。","categories":[{"name":"Hexo博客系列","slug":"Hexo博客系列","permalink":"https://stoprain0.github.io.git/categories/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"主题","slug":"主题","permalink":"https://stoprain0.github.io.git/tags/%E4%B8%BB%E9%A2%98/"},{"name":"Yume Shaka","slug":"Yume-Shaka","permalink":"https://stoprain0.github.io.git/tags/Yume-Shaka/"}]},{"title":"第一个文章","slug":"hello-world","date":"2021-09-16T12:50:59.617Z","updated":"2021-09-19T04:42:10.341Z","comments":true,"path":"2021/09/16/hello-world/","link":"","permalink":"https://stoprain0.github.io.git/2021/09/16/hello-world/","excerpt":"","text":"时间：2021/9/16 创建博客 成功通过 git 软件引用 Hexo 框架创建好博客。","categories":[{"name":"Hexo博客系列","slug":"Hexo博客系列","permalink":"https://stoprain0.github.io.git/categories/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://stoprain0.github.io.git/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Hexo","slug":"Hexo","permalink":"https://stoprain0.github.io.git/tags/Hexo/"}]}],"categories":[{"name":"前端","slug":"前端","permalink":"https://stoprain0.github.io.git/categories/%E5%89%8D%E7%AB%AF/"},{"name":"Java系列","slug":"Java系列","permalink":"https://stoprain0.github.io.git/categories/Java%E7%B3%BB%E5%88%97/"},{"name":"git","slug":"git","permalink":"https://stoprain0.github.io.git/categories/git/"},{"name":"数据库系列","slug":"数据库系列","permalink":"https://stoprain0.github.io.git/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E5%88%97/"},{"name":"Hexo博客系列","slug":"Hexo博客系列","permalink":"https://stoprain0.github.io.git/categories/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"https://stoprain0.github.io.git/tags/HTML/"},{"name":"前端","slug":"前端","permalink":"https://stoprain0.github.io.git/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Java","slug":"Java","permalink":"https://stoprain0.github.io.git/tags/Java/"},{"name":"git学习","slug":"git学习","permalink":"https://stoprain0.github.io.git/tags/git%E5%AD%A6%E4%B9%A0/"},{"name":"git命令语句","slug":"git命令语句","permalink":"https://stoprain0.github.io.git/tags/git%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/"},{"name":"数据库","slug":"数据库","permalink":"https://stoprain0.github.io.git/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"SQL","slug":"SQL","permalink":"https://stoprain0.github.io.git/tags/SQL/"},{"name":"主题","slug":"主题","permalink":"https://stoprain0.github.io.git/tags/%E4%B8%BB%E9%A2%98/"},{"name":"Yume Shaka","slug":"Yume-Shaka","permalink":"https://stoprain0.github.io.git/tags/Yume-Shaka/"},{"name":"博客","slug":"博客","permalink":"https://stoprain0.github.io.git/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Hexo","slug":"Hexo","permalink":"https://stoprain0.github.io.git/tags/Hexo/"}]}