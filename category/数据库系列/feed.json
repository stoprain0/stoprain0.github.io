{
    "version": "https://jsonfeed.org/version/1",
    "title": "止雨 • All posts by \"数据库系列\" category",
    "description": "我忘却了所有悲剧，所见皆是奇迹。",
    "home_page_url": "https://stoprain0.github.io.git",
    "items": [
        {
            "id": "https://stoprain0.github.io.git/2021/09/19/SQL1/",
            "url": "https://stoprain0.github.io.git/2021/09/19/SQL1/",
            "title": "数据库原理及应用",
            "date_published": "2021-09-19T13:34:41.392Z",
            "content_html": "<h2 id=\"数据库基本操作\"><a class=\"markdownIt-Anchor\" href=\"#数据库基本操作\">#</a> 数据库基本操作</h2>\n<hr>\n<p>发现 SQL 语句对关键字不区分大小写，去了解一下发现</p>\n<blockquote>\n<p>sql 语句大小写的问题：<br>\n关键字不区分大小写 例如 select ，from， 大小写均可</p>\n<p>标识符区分大小写 例如 表名，列名 标识符如果不加双引号，默认是按大写执行 标识符如果加双引号，则是按原始大小写执行</p>\n</blockquote>\n<p><strong>SQL 语句的书写规范<br>\n所有表名，列名全部小写<br>\n关键字，内置函数名全部大写</strong></p>\n<ul>\n<li>使用 / 切换数据库：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">USE</span><span class=\"token operator\">+</span>数据库名称</pre></td></tr></table></figure><ul>\n<li>创建表的基本语法：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     列名<span class=\"token number\">1</span>  数据类型<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     列名<span class=\"token number\">2</span>  数据类型</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol>\n<li>指定字段名为主键<strong> PRIMARY KEY</strong>：</li>\n<li>指定数据自动增长<strong> IDENTITY (1，1)</strong><br>\n 第一个参数代表初始值，第二个参数代表增长数。</li>\n<li><strong>NOT NULL</strong> 则指定对应的值不能为空。</li>\n<li><strong>CHECK</strong>(<strong>列名 =' 值’<strong>OR</strong> 列名 =‘值’</strong>) 限定输入条件</li>\n<li><strong>DEFAULT (‘值’)</strong> 设默认值</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>字段名  数据类型  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">IDENTITY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span>，<span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>建表时如果表名已经存在，则会发生冲突，这时我们可以在建表前加一个判断，然后去解决冲突。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span><span class=\"token operator\">*</span><span class=\"token keyword\">FROM</span> sys<span class=\"token punctuation\">.</span>objects <span class=\"token keyword\">WHERE</span> name<span class=\"token operator\">=</span><span class=\"token string\">'表名'</span><span class=\"token operator\">AND</span> <span class=\"token keyword\">TYPE</span><span class=\"token operator\">=</span><span class=\"token string\">'U'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> 表名</pre></td></tr></table></figure><p><strong>–DROP TABLE 表名</strong>  删除表（删表仅推荐在数据库入门时使用，因删表操作可能会导致数据丢失）<br>\n<strong>-TYPE=‘U’</strong>     代表为用户自定义的表</p>\n<hr>\n<h2 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型：</h2>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>数据类型举例</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Character</td>\n<td>CHAR(n) , VARCHAR(n)</td>\n<td>CHAR 固定长度，VARCHAR 可变长度</td>\n</tr>\n</tbody>\n</table>\n<hr>\n",
            "tags": [
                "数据库",
                "SQL"
            ]
        }
    ]
}